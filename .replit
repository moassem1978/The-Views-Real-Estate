modules = ["nodejs-20", "bash", "web", "postgresql-16"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
run = ["sh", "-c", "NODE_ENV=production node dist/index.js"]
build = ["sh", "-c", "npm run build"]

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3000

[workflows]
runButton = "Robust Server Start"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[[workflows.workflow]]
name = "Production Build"
author = 40723493
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run check"

[[workflows.workflow]]
name = "Image Maintenance"
author = 40723493
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ts-node server/cleanup-images.ts"

[[workflows.workflow]]
name = "Fix Permissions"
author = 40723493
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod -R 777 public/uploads"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod -R 777 uploads"

[[workflows.workflow]]
name = "Image Cleanup"
author = 40723493
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ts-node server/cleanup-images.ts"

[[workflows.workflow]]
name = "Start Server"
author = 40723493
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ps aux | grep -E \"(node|npm|tsx)\" | grep -v grep | awk '{print $2}' | xargs kill -9 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "SEO Bi-Daily Optimizer"
author = 40723493
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const { SEOOptimizer } = require('./server/seo-optimizer.ts');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const optimizer = new SEOOptimizer();"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "optimizer.runFullSEOOptimization().then(() => {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  console.log('SEO optimization completed');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  process.exit(0);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "}).catch(err => {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  console.error('SEO optimization failed:', err);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  process.exit(1);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "});"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "\""

[[workflows.workflow]]
name = "Robust Server Start"
author = 40723493
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill -f \"tsx.*server\" || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
